{"version":3,"sources":["database/db.js","database/NotesDao.js","notes/Notes.js","App.js","index.js"],"names":["db","Dexie","version","stores","notes","NotesDao","reverse","toArray","task","add","put","id","delete","clear","Notes","props","loadNotes","getInstance","getAll","then","result","setState","newNoteTitleChange","event","newNoteTitle","target","value","newNoteDescChage","newNoteDesc","searchChange","search","changeColor","color","addNewNote","validNote","note","name","state","desc","insert","editNote","noteToUpdate","update","deleteNote","insertingNote","this","className","content","type","onClick","placeholder","onChange","tabIndex","htmlFor","autoComplete","defaultChecked","map","toLowerCase","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed1dcfd0.chunk.js","sourcesContent":["import Dexie from 'dexie';\r\n\r\nconst db = new Dexie('notesDB');\r\n\r\ndb.version(1).stores({\r\n    notes: '++id, name'\r\n});\r\n\r\nexport default db;","import db from './db'\r\n\r\nexport default class NotesDao {\r\n\r\n    static getInstance() {\r\n        return new NotesDao();\r\n    }\r\n\r\n    getAll() {\r\n        return db.notes.reverse().toArray();\r\n    }\r\n\r\n    insert(task) {\r\n        return db.notes.add(task);\r\n    }\r\n\r\n    update(task) {\r\n        return db.notes.put(task);\r\n    }\r\n\r\n    delete(id) {\r\n        return db.notes.delete(id);\r\n    }\r\n\r\n    clearAllTasks() {\r\n        return db.notes.clear();\r\n    }\r\n\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport NotesDao from '../database/NotesDao';\r\nimport Tippy from '@tippyjs/react';\r\nimport 'tippy.js/dist/tippy.css';\r\n\r\nexport default class Notes extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             notes: [],\r\n             newNoteTitle: \"\",\r\n             newNoteDesc: \"\",\r\n             noteToUpdate: {},\r\n             insertingNote: true,\r\n             search: \"\",\r\n             validNote: true,\r\n             color: \"\"\r\n        }\r\n    }\r\n\r\n    loadNotes = () => {\r\n        NotesDao.getInstance().getAll()\r\n            .then( result => {\r\n                this.setState({notes: result});\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadNotes();\r\n        this.changeColor(\"bg-light text-dark\");\r\n    }\r\n\r\n    newNoteTitleChange = (event) => {\r\n        this.setState({newNoteTitle: event.target.value})\r\n    }\r\n\r\n    newNoteDescChage = (event) => {\r\n        this.setState({newNoteDesc: event.target.value})\r\n    }\r\n\r\n    searchChange = (event) => {\r\n        this.setState({search: event.target.value})\r\n    }\r\n\r\n    changeColor = (color) => {\r\n        this.setState({color: color})\r\n    }\r\n\r\n    addNewNote = () => {\r\n        this.setState({validNote: true});\r\n        let note = {name: this.state.newNoteTitle, desc: this.state.newNoteDesc, color: this.state.color};\r\n        NotesDao.getInstance().insert(note)\r\n            .then( result => {\r\n                this.loadNotes();\r\n            });\r\n    }\r\n\r\n    editNote = () => {\r\n        this.setState({validNote: true});\r\n        let note = this.state.noteToUpdate;\r\n        note.name = this.state.newNoteTitle;\r\n        note.desc = this.state.newNoteDesc;\r\n        note.color = this.state.color;\r\n        NotesDao.getInstance().update(note)\r\n            .then( result => {\r\n                this.loadNotes();\r\n            });\r\n    }\r\n\r\n    deleteNote = (id) => {\r\n        NotesDao.getInstance().delete(id)\r\n            .then( result => {\r\n                this.loadNotes();\r\n            });\r\n    }\r\n\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"row d-flex justify-content-center\">\r\n                <div className=\"my-2 col-md-10 p-2\">\r\n                    <h3 className=\"text-center d-lg-none\">Simple Notes App</h3>\r\n                    <hr className=\"d-lg-none\"/>\r\n                    <div className=\"d-flex gap-2\">\r\n                        <div className=\"col-1 col-lg-3\">\r\n                            <Tippy content=\"New note\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" onClick={() => this.setState({insertingNote: true, newNoteTitle: \"\", newNoteDesc: \"\", validNote: true})} data-bs-toggle=\"modal\" data-bs-target=\"#newNoteModal\"><i className=\"bi bi-plus-lg\"></i></button>\r\n                            </Tippy>\r\n                        </div>\r\n                        <div className=\"d-flex col-10 col-lg-6 justify-content-center\">\r\n                            <div className=\"col-lg-8 col-sm-6\">\r\n                                <input className=\"form-control bg-dark text-white\" type=\"text\" placeholder=\"Search\" onChange={this.searchChange}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"d-none d-lg-block col-1 col-lg-3 pt-1\"><h4 className=\"text-center\">Simple Notes App</h4></div>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"modal fade\" id=\"newNoteModal\" tabIndex=\"-1\">\r\n                        <div className=\"modal-dialog\">\r\n                            <div className=\"modal-content bg-dark text-white\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"newNoteModalLabel\">{this.state.insertingNote ? \"New Note\" : \"Edit Note\"}</h5>\r\n                                    <button type=\"button\" className=\"btn-close btn-close-white\" data-bs-dismiss=\"modal\"></button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <form>\r\n                                        <div className=\"mb-3\">\r\n                                            <label htmlFor=\"note-name\" className=\"col-form-label\">Title:</label>\r\n                                            <input value={this.state.newNoteTitle} onChange={this.newNoteTitleChange} type=\"text\" className=\"form-control bg-dark text-white\" id=\"note-name\" placeholder=\"Note to self...\"/>\r\n                                            {!this.state.validNote ? <label className=\"text-danger form-text\"> * Required</label> : <div></div>}\r\n                                        </div>\r\n                                        <div className=\"mb-3\">\r\n                                            <label htmlFor=\"description-text\" className=\"col-form-label\">Description:</label>\r\n                                            <textarea value={this.state.newNoteDesc} onChange={this.newNoteDescChage} className=\"form-control bg-dark text-white\" id=\"description-text\"></textarea>\r\n                                        </div>\r\n                                        <label htmlFor=\"choose-color\" className=\"col-form-label\">Note color:</label>\r\n                                        <div className=\"d-flex gap-2\" id=\"choose-color\">\r\n                                            <input type=\"radio\" className=\"btn-check\" name=\"options-outlined\" id=\"primary-outlined\" autoComplete=\"off\" onClick={() => this.changeColor(\"bg-primary text-white\")}/>\r\n                                            <label className=\"btn btn-outline-primary\" htmlFor=\"primary-outlined\"><i className=\"bi bi-palette\"></i></label>\r\n                                            <input type=\"radio\" className=\"btn-check\" name=\"options-outlined\" id=\"secondary-outlined\" autoComplete=\"off\" onClick={() => this.changeColor(\"bg-secondary text-white\")}/>\r\n                                            <label className=\"btn btn-outline-secondary\" htmlFor=\"secondary-outlined\"><i className=\"bi bi-palette\"></i></label>\r\n                                            <input type=\"radio\" className=\"btn-check\" name=\"options-outlined\" id=\"success-outlined\" autoComplete=\"off\" onClick={() => this.changeColor(\"bg-success text-white\")}/>\r\n                                            <label className=\"btn btn-outline-success\" htmlFor=\"success-outlined\"><i className=\"bi bi-palette\"></i></label>\r\n                                            <input type=\"radio\" className=\"btn-check\" name=\"options-outlined\" id=\"danger-outlined\" autoComplete=\"off\" onClick={() => this.changeColor(\"bg-danger text-white\")}/>\r\n                                            <label className=\"btn btn-outline-danger\" htmlFor=\"danger-outlined\"><i className=\"bi bi-palette\"></i></label>\r\n                                            <input type=\"radio\" className=\"btn-check\" name=\"options-outlined\" id=\"warning-outlined\" autoComplete=\"off\" onClick={() => this.changeColor(\"bg-warning text-dark\")}/>\r\n                                            <label className=\"btn btn-outline-warning\" htmlFor=\"warning-outlined\"><i className=\"bi bi-palette\"></i></label>\r\n                                            <input type=\"radio\" className=\"btn-check\" name=\"options-outlined\" id=\"info-outlined\" autoComplete=\"off\" onClick={() => this.changeColor(\"bg-info text-dark\")}/>\r\n                                            <label className=\"btn btn-outline-info\" htmlFor=\"info-outlined\"><i className=\"bi bi-palette\"></i></label>\r\n                                            <input type=\"radio\" className=\"btn-check\" name=\"options-outlined\" id=\"light-outlined\" autoComplete=\"off\" onClick={() => this.changeColor(\"bg-light text-dark\")} defaultChecked/>\r\n                                            <label className=\"btn btn-outline-light\" htmlFor=\"light-outlined\"><i className=\"bi bi-palette\"></i></label>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n                                    {this.state.newNoteTitle !== \"\" ?\r\n                                        <button type=\"button\" className=\"btn btn-success\" id=\"note-submit-button\" onClick={() => {this.state.insertingNote ? this.addNewNote() : this.editNote()}} data-bs-dismiss=\"modal\">{this.state.insertingNote ? \"Add\" : \"Save\"}</button>\r\n                                    :   <button type=\"button\" className=\"btn btn-success\" id=\"note-submit-button\" onClick={() => {this.setState({validNote: false})}}>{this.state.insertingNote ? \"Add\" : \"Save\"}</button>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {this.state.notes && this.state.notes.map( (note) => {\r\n                            if((note.name.toLowerCase().search(this.state.search.toLowerCase()) !== -1) || (note.desc.toLowerCase().search(this.state.search.toLowerCase()) !== -1)) {\r\n                                return <div key={note.id} className=\"col-md-4 col-sm-6 my-2\">\r\n                                    <div className={\"card \" + note.color}>\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title\">{note.name}</h5>\r\n                                            <p className=\"card-text\">{note.desc}</p>\r\n                                                <div className=\"d-flex flex-row gap-2 justify-content-end\">\r\n                                                    <Tippy content=\"Edit note\">\r\n                                                        <button className={\"btn btn-sm \" + note.color} type=\"button\" onClick={() => {\r\n                                                                this.setState({noteToUpdate: note, newNoteTitle: note.name, newNoteDesc: note.desc, color: note.color, insertingNote: false});\r\n                                                            }} data-bs-toggle=\"modal\" data-bs-target=\"#newNoteModal\">\r\n                                                            <i className=\"bi bi-pencil-square\"></i>\r\n                                                        </button>\r\n                                                    </Tippy>\r\n                                                    <Tippy content=\"Delete note\">\r\n                                                        <button className={\"btn btn-sm \" + note.color} type=\"button\" onClick={() => this.deleteNote(note.id)}><i className=\"bi bi-trash\"></i></button>\r\n                                                    </Tippy>\r\n                                                </div> \r\n                                        </div>\r\n                                    </div>  \r\n                                </div>\r\n                            } else {\r\n                                return <div key={note.id}></div>\r\n                            }\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport Notes from './notes/Notes'\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <Notes />\n      </div>\n    )\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}